{
  "version": 3,
  "sources": ["../../src/types.ts"],
  "sourcesContent": ["import {\n  Checkbox,\n  CheckboxProps,\n  Form,\n  FormProps as FormDefaultProps,\n  InputProps,\n  RadioGroup,\n  RadioGroupProps,\n  Select,\n  SelectProps,\n  Slider,\n  SliderProps,\n  Switch,\n  SwitchProps,\n  TextAreaProps,\n} from 'tamagui/types'\nimport { MutableRefObject, PropsWithChildren } from 'react'\nimport {\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  SubmitHandler,\n  UseFormProps,\n  UseFormReturn,\n} from 'react-hook-form'\n\nimport { FieldControlled } from './Field'\nimport { MessageProps } from './Message'\nimport { ValueProps } from './Value'\nimport { withController } from './withController'\n\nexport type Merge<A extends Function, B> = A & B\n\nexport type WithController<\n  TProps,\n  TFieldValues extends FieldValues = FieldValues\n> = React.ForwardRefRenderFunction<unknown, WithControllerProps<TProps, TFieldValues>>\n\nexport type FRef<TFieldValues extends FieldValues = FieldValues> = UseFormReturn<TFieldValues>\n\nexport type FormProps<TFieldValues extends FieldValues = FieldValues> = PropsWithChildren<\n  UseFormProps<TFieldValues> &\n    Omit<FormDefaultProps, 'onSubmit'> & {\n      onSubmit: SubmitHandler<TFieldValues>\n      fRef?: MutableRefObject<FRef<TFieldValues> | null>\n    }\n>\n\ntype ExtractStaticProps<El> = Omit<El, '$$typeof'>\n\nexport type StaticProps<TFieldValues extends FieldValues = FieldValues> = {\n  Input: WithController<InputProps, TFieldValues>\n  // Checkbox: WithController<CheckboxProps, TFieldValues> &\n  //   ExtractStaticProps<typeof Checkbox>;\n  RadioGroup: WithController<RadioGroupProps, TFieldValues> & ExtractStaticProps<typeof RadioGroup>\n  Select: WithController<SelectProps, TFieldValues> & ExtractStaticProps<typeof Select>\n  Slider: WithController<SliderProps, TFieldValues> & ExtractStaticProps<typeof Slider>\n  Switch: WithController<SwitchProps, TFieldValues> & ExtractStaticProps<typeof Switch>\n  TextArea: WithController<TextAreaProps, TFieldValues>\n  Trigger: typeof Form.Trigger\n  Message: WithController<MessageProps, TFieldValues>\n  Value: WithController<ValueProps, TFieldValues>\n  Field: typeof FieldControlled<TFieldValues>\n}\n\nexport type WithControllerProps<TProps, TFieldValues extends FieldValues = FieldValues> = Omit<\n  ControllerProps<TFieldValues, FieldPath<TFieldValues>>,\n  'render' | 'control' | 'name'\n> &\n  Omit<TProps, 'name'> & {\n    name?: FieldPath<TFieldValues>\n  }\n"],
  "mappings": ";;;;;;;;;;;;;AAAA;AAAA;",
  "names": []
}
